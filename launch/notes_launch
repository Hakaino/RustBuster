<launch>


	<!--This is the main node, where all the program will be build around-->
	<node pkg="rustbuster" exec="rustbuster_init" name="rustbuster_init" output="screen"/>

	<!--Spot Webot- This package takes care of the simulation, and control, it also has some navigation and slam nodes-->
	<include file="$(find-pkg-share webots_spot)/launch/spot_launch.py"/>
	<include file="$(find-pkg-share webots_spot)/launch/nav_launch.py"> <!--this makes spot move and fallow paths-->
		<arg name="set_initial_pose" value="true"/>
	</include>
	<include file="$(find-pkg-share webots_spot)/launch/slam_launch.py"/>

	<!--Spot Driver-->


	<include file="$(find-pkg-share spot_driver)/launch/point_cloud_xyz.launch.py"/>

	<!--Exploration-->



</launch>
<!--





	<include file="$(find-pkg-share spot_driver)/launch/rs_launch.py"/>

<node pkg="explore_lite" exec="explore" name="explore" output="screen">
		<include file="$(find-pkg-share explore_lite)/m-explore-ros2/explore/config/params.yaml"/>
	</node>

	ros2 run explore_lite explore -ros-args -params-file <path_to_ros_ws>/m-explore-ros2/explore/config/params.yaml

	<Manual control>
	<node pkg="teleop_twist_keyboard" exec="teleop_twist_keyboard" name="teleop" output="screen"/>

	"Spot"
	<include file="$(find-pkg-share spot_driver)/launch/rs_launch.py"/>
	<include file="$(find-pkg-share spot_driver)/launch/spot_driver.launch.py">
	<arg config_file="$(var config_file)"/>
	</include>
	<-include file="$(find-pkg-share spot_driver)/launch/spot_driver_with_namespace.launch.py"/>

	<-???->
	<include file="$(find-pkg-share spot_description)/launch/description.launch.py"/
-->

<!-- Launch the SLAM Toolbox node (2D and 3D) -->
  <node name="slam_toolbox_node" pkg="slam_toolbox" exec="async_slam_toolbox_node" output="screen">
    <param name="use_sim_time" value="false" />
    <param name="debug" value="false" />
    <param name="output_frame" value="map" />
    <param name="base_frame" value="base_link" />
    <param name="odom_frame" value="odom" />
    <param name="wait_for_transform" value="true" />
    <param name="scan_downsample_optimization" value="false" />
    <param name="odom_topic" value="/odometry"/>
    <param name="use_odometry" value="false"/>
    <param name="use_nav_sat" value="false"/>
    <param name="use_landmarks" value="false"/>
    <param name="use_organized" value="true"/>
    <param name="subscribe_scan_matched_points" value="true"/>
    <param name="subscribe_scan" value="true"/>
    <param name="subscribe_cloud" value="false"/>
    <param name="subscribe_intensity" value="false"/>
    <param name="use_async" value="true"/>
    <param name="scan_topic" value="/os1_node/points"/>
    <param name="scan_batch_size" value="1000"/>
    <param name="scan_queue_size" value="10"/>
    <param name="scan_voxel_filter_size" value="0.2"/>
    <param name="scan_search_radius" value="0.5"/>
    <param name="scan_icp_max_correspondence_distance" value="1.0"/>
    <param name="scan_icp_iterations" value="30"/>
    <param name="scan_icp_transformation_epsilon" value="1e-8"/>
    <param name="scan_icp_euclidean_fitness_epsilon" value="1e-5"/>
    <param name="publish_map" value="true"/>
    <param name="publish_registered_cloud" value="true"/>
    <param name="publish_pose" value="true"/>
    <param name="publish_tf" value="true"/>
    <param name="map_publish_frequency" value="2.0"/>
    <param name="map_publish_transient_local" value="false"/>
    <param name="map_frame" value="map"/>
    <param name="map_two_d_mode" value="false"/>
    <param name="map_resolution" value="0.2"/>
    <param name="map_to_pointcloud" value="true"/>
    <param name="map_to_pointcloud_min_z" value="-0.5"/>
    <param name="map_to_pointcloud_max_z" value="0.5"/>
    <param name="map_to_pointcloud_min_range" value="2.0"/>
    <param name="map_to_pointcloud_max_range" value="120.0"/>
    <param name="map_to_pointcloud_voxel_size" value="0.2"/>
  </node>
